/* now you can try using nested selectors*/

@tailwind base;
@tailwind components;
@tailwind utilities;




:root {
  font-family: "Helvetica Neue", Helvetica, Arial, "Hiragino Kaku Gothic Pro", 'Meiryo', "MS Gothic",
  'Inter', system-ui, 'Avenir' , sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: whitesmoke;
  background-color: #0e0e0e;;
  scrollbar-width: thin;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  -webkit-text-size-adjust: 100%;
}

:root::-webkit-scrollbar {
  width: 10px;
}





.main-container {
  display: grid; 
  grid-template-areas: 's n n'
                       's m m'
                       's m m'
                       'f f f';
  grid-template-rows: 1fr 4fr 4fr 1fr;
  grid-template-columns: minmax(14.5rem, max-content) repeat(2, minmax(auto, 1fr));
  scrollbar-width: none;
  overflow: clip;
}

.main-container::-webkit-scrollbar{
  display: none !important;

}

.sidebar {
  grid-area: s;
}

.main-child {
  display: grid;
  grid-template-areas: 'm m m p p';
  grid-template-columns: 3fr 2fr;
  grid-template-rows: 1fr;
}



.footer, .nav{
  padding-right: 0.4rem;
} 

.inactive {
  pointer-events: none;
  cursor: none;
  color: gray;
}

.sidebar ul>li {
  width: 100%;
  margin-top: 0.2rem;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  padding-top: 0.5rem;
  padding-bottom: 0.5rem;
  border-radius: 2rem;
  padding-left: 15%;
  font-weight: 700;
}

.sidebar>ul, .sidebar>h2 {
  width: 100%;
}


.sidebar ul li:hover {
  background-color: gray;
  pointer-events: visible;
  cursor: pointer;
}

.sidebar li.--big-svg{
  padding-top: 0.25rem;
  padding-bottom: 0.25rem;
}

.sidebar svg:not(.media-count) {
  width: 2rem;
  height: 2rem;
  display: inline-block;
}

.sidebar svg.small-svg{
  width: 1.5rem;
  height: 1.5rem;
}

.sidebar li>svg {
  margin-right: 0.5rem;
}


.sidebar svg.--big-svg {
  height: 2.5rem;
  width: 2.5rem;
  margin-left: -4.5px;
  
}


.footer svg {
  width: 1.3rem;
  height: 1.3rem;
}

footer input, footer svg {
  cursor: pointer;
}


.footer {
  grid-area: f;
}

input[type="range"] {
  -webkit-appearance: none;
  appearance: none;
  background-color: white;
  cursor: pointer;
  border-radius: 0.6rem;
  height: 0.3rem;
}

input[type="range"]:focus {
  outline: none;
}

input[type="range"]::-webkit-slider-runnable-track {
  height: 0.3rem;
  border-radius: 0.2rem;
  background-color: transparent;
}

input[type="range"]::-moz-range-track {
  height: 0.3rem;
  border-radius: 0.2rem;
  background-color: transparent;
}

input[type="range"]::-webkit-slider-thumb {
  -webkit-appearance: none; 
  appearance: none;
  background-color: white;
  margin-top: -0.3rem;
  height: 0.8rem;
  width: 0.8rem;
  border-radius: 0.4rem; 
  display: none;
}

input[type="range"]::-moz-range-thumb {
  border: none; 
  background-color: white;
  height: 0.8rem;
  width: 0.8rem;
  border-radius: 0.4rem; 
  display: none;
}


input[type="range"]:hover::-webkit-slider-thumb {
  display: block
  }
  
  
  input[type="range"]:hover::-moz-range-thumb {
    display: block;
     
  }

  /*input[type="range"]:hover::-webkit-slider-thumb {
    box-shadow: 0 0 0 10px rgba(255,85,0, .1)
  }

  input[type="range"]:hover::-moz-range-thumb {
    box-shadow: 0 0 0 10px rgba(255,85,0, .1)
  }*/



.player svg {
  width: 1.5rem;
  height: 1.5rem;
}

.player svg.play {
  width: 3rem;
  height: 3rem;
}


.slider-control-centerright > button, .slider-control-centerleft > button{
  background-color: transparent !important;
}


a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}


a:hover {
  color: #535bf2;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

h3 {
  font-size: 1.2rem;
  font-weight: bold;
}


button{

  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  cursor: pointer;
  transition: border-color 0.25s;
}

button:hover{
  border-color: #646cff;
}


li {
  text-transform: capitalize;
}

.transitional {
  transition: all 0.3s ease-in-out;
}

@keyframes translateOut {
  from {
    transform: translateX(calc(-100% - 20px));
  }
  to {
    transform: translateX(0%);
  }
}

@keyframes translateIn {
  from {
    transform: translateX(0%);
  }
  to {
    transform: translateX(calc(-100% - 20px));
  }
}

.translateIn {
  animation: 300ms ease-in-out 0s 1 normal forwards running translateIn;
  margin-right: 0;
  display: none;
}


.translateOut{
  display: flex;
  margin-right: 2rem;
  animation: 300ms ease-in-out 0s 1 normal forwards running translateOut;
}


@media screen and (min-width: 1124px) and (min-height: 65rem ) {
  #root {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
  }
}

@media screen and (min-width: 777px) {
  

  

}
